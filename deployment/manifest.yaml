apiVersion: v1
kind: Namespace
metadata:
  name: kubevol
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubevol
  namespace: "kubevol"
  labels:
    app: kubevol
    app.kubernetes.io/name: kubevol
    app.kubernetes.io/instance: kubevol-watcher
    app.kubernetes.io/component: "controller"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevol
  labels:
    app: kubevol
    app.kubernetes.io/name: kubevol
    app.kubernetes.io/instance: kubevol-watcher
    app.kubernetes.io/component: "controller"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmap"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubevol
  labels:
    app: kubevol
    app.kubernetes.io/name: kubevol
    app.kubernetes.io/instance: kubevol-watcher
    app.kubernetes.io/component: "controller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevol
subjects:
  - name: kubevol
    namespace: "kubevol"
    kind: ServiceAccount
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubevol-watch
  namespace: "kubevol"
  labels:
    app: kubevol
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevol
      app.kubernetes.io/instance: kubevol-watch
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: kubevol
        app.kubernetes.io/name: kubevol
        app.kubernetes.io/instance: kubevol-watch
        app.kubernetes.io/component: "controller"
    spec:
      serviceAccountName: kubevol
      containers:
        - name: kubevol-watch
          image: "bmaynard/kubevol-watch:v0.6.1"
          imagePullPolicy: IfNotPresent